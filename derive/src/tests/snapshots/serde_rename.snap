---
source: derive/src/tests/cases.rs
---
#[derive(Row)]
struct Sample {
    a: i32,
    #[serde(rename = "items.a")]
    items_a: Vec<String>,
    #[serde(rename = "items.b")]
    items_b: Vec<u32>,
}

/****** GENERATED ******/
#[automatically_derived]
impl clickhouse::Row for Sample {
    const NAME: &'static str = stringify!(Sample);
    fn column_names() -> impl IntoIterator<Item = &'static str> {
        ["a", "items.a", "items.b"]
    }
    fn column_count() -> usize {
        <Self as clickhouse::Row>::column_names().into_iter().count()
    }
    const KIND: clickhouse::_priv::RowKind = clickhouse::_priv::RowKind::Struct;
    type Value<'__v> = Self;
}
